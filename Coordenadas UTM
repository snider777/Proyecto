import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.text.DecimalFormat;

public class MapaUTM extends JFrame {

    private JTextField txtEste, txtNorte, txtZona;
    private JLabel lblResultado;
    private MapaPanel panelMapa;

    public MapaUTM() {
        setTitle("Conversor de Coordenadas UTM a Geográficas");
        setSize(800, 600);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Panel superior para ingresar coordenadas
        JPanel panelEntrada = new JPanel(new GridLayout(2, 4));
        txtEste = new JTextField();
        txtNorte = new JTextField();
        txtZona = new JTextField();
        JButton btnConvertir = new JButton("Convertir");

        panelEntrada.add(new JLabel("Este (X):"));
        panelEntrada.add(txtEste);
        panelEntrada.add(new JLabel("Norte (Y):"));
        panelEntrada.add(txtNorte);
        panelEntrada.add(new JLabel("Zona UTM:"));
        panelEntrada.add(txtZona);
        panelEntrada.add(btnConvertir);

        add(panelEntrada, BorderLayout.NORTH);

        // Panel inferior con resultado
        lblResultado = new JLabel("Ingresa coordenadas UTM", SwingConstants.CENTER);
        add(lblResultado, BorderLayout.SOUTH);

        // Panel central con mapa
        panelMapa = new MapaPanel();
        add(panelMapa, BorderLayout.CENTER);

        // Acción del botón
        btnConvertir.addActionListener(e -> convertir());

        setVisible(true);
    }

    private void convertir() {
        try {
            double este = Double.parseDouble(txtEste.getText());
            double norte = Double.parseDouble(txtNorte.getText());
            int zona = Integer.parseInt(txtZona.getText());

            double[] geo = utmToLatLon(este, norte, zona);

            DecimalFormat df = new DecimalFormat("#.######");
            String lat = df.format(geo[0]);
            String lon = df.format(geo[1]);

            lblResultado.setText("Lat: " + lat + " | Lon: " + lon);

            // Mostrar punto en el mapa
            panelMapa.setUTM(este, norte);
        } catch (NumberFormatException ex) {
            lblResultado.setText("Error en el formato de entrada.");
        }
    }

    // Conversión simplificada de UTM a Lat/Lon (solo para zona norte, WGS84)
    public static double[] utmToLatLon(double easting, double northing, int zone) {
        boolean isNorthHemisphere = true; // Asumimos zona norte
        double a = 6378137;
        double e = 0.0818192;
        double e1sq = 0.006739497;
        double k0 = 0.9996;

        double arc = northing / k0;
        double mu = arc / (a * (1 - Math.pow(e,2)/4 - 3*Math.pow(e,4)/64 - 5*Math.pow(e,6)/256));

        double ei = (1 - Math.pow((1 - e * e), 0.5)) / (1 + Math.pow((1 - e * e), 0.5));

        double ca = 3 * ei / 2 - 27 * Math.pow(ei,3) / 32;
        double cb = 21 * Math.pow(ei,2) / 16 - 55 * Math.pow(ei,4) / 32;
        double cc = 151 * Math.pow(ei,3) / 96;
        double cd = 1097 * Math.pow(ei,4) / 512;
        double phi1 = mu + ca * Math.sin(2 * mu) + cb * Math.sin(4 * mu) + cc * Math.sin(6 * mu) + cd * Math.sin(8 * mu);

        double n0 = a / Math.pow((1 - Math.pow(e * Math.sin(phi1), 2)), 0.5);
        double r0 = a * (1 - e * e) / Math.pow((1 - Math.pow(e * Math.sin(phi1), 2)), 1.5);
        double fact1 = n0 * Math.tan(phi1) / r0;

        double _a1 = 500000 - easting;
        double dd0 = _a1 / (n0 * k0);
        double fact2 = dd0 * dd0 / 2;

        double t0 = Math.pow(Math.tan(phi1), 2);
        double Q0 = e1sq * Math.pow(Math.cos(phi1), 2);
        double fact3 = (5 + 3 * t0 + 10 * Q0 - 4 * Q0 * Q0 - 9 * e1sq) * Math.pow(dd0, 4) / 24;

        double fact4 = (61 + 90 * t0 + 298 * Q0 + 45 * t0 * t0 - 252 * e1sq - 3 * Q0 * Q0) * Math.pow(dd0, 6) / 720;

        double lof1 = dd0 - (1 + 2 * t0 + Q0) * Math.pow(dd0,3) / 6
                      + (5 - 2 * Q0 + 28 * t0 - 3 * Math.pow(Q0,2) + 8 * e1sq + 24 * Math.pow(t0,2)) * Math.pow(dd0,5) / 120;
        double _a2 = lof1 / Math.cos(phi1);
        double _a3 = _a2 * 180 / Math.PI;

        double latitude = 180 * (phi1 - fact1 * (fact2 + fact3 + fact4)) / Math.PI;
        double longitude = ((zone > 0) ? ((zone * 6 - 183.0) - _a3) : 3.0 - _a3);

        return new double[] {latitude, -longitude}; // Negativo porque usamos _a1 = 500000 - easting
    }

    public static void main(String[] args) {
        new MapaUTM();
    }

    // Clase interna para mostrar el mapa
    class MapaPanel extends JPanel {
        private Image mapa;
        private double xUTM = -1, yUTM = -1;

        public MapaPanel() {
            mapa = new ImageIcon("mapa.jpg").getImage(); // Asegúrate que el archivo exista en la carpeta del proyecto
        }

        public void setUTM(double x, double y) {
            this.xUTM = x;
            this.yUTM = y;
            repaint();
        }

        @Override
        public void paintComponent(Graphics g) {
            super.paintComponent(g);
            g.drawImage(mapa, 0, 0, getWidth(), getHeight(), this);

            if (xUTM != -1 && yUTM != -1) {
                // Solo para prueba, ubicamos el punto más o menos proporcional
                int px = (int) ((xUTM % 1000000) / 1000000 * getWidth());
                int py = (int) ((10000000 - yUTM) / 10000000 * getHeight());

                g.setColor(Color.RED);
                g.fillOval(px - 5, py - 5, 10, 10);
            }
        }
    }
}
